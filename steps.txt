Steps

SECTION 2
1. create db
2. create connection from index.php to db
3. create form to register.php to register user
   - capture the register form input values
   - sanitize accordingly
   - validate accordingly
4. create users table
5. check if email already in use
6. validate the remaining values
7. store the form input values into session, so the values persist during form error
8. store the error messages into an array, and display if got error in the register form
9. auto create username, append incremented number if username already exist
10. assign default profile picture, random between 2 default pics
11. insert all the finalized values into users table
12. set successfull insert message into error array and then display it after inserting
13. reset form input sessions values

SECTION 3
1. create config.php, put db connection code in there and include it in the register.php
2. move all other php code in register.php to register_handler.php page and include it in the register.php
3. create login form, above registration form, inside register.php page
4. handle login in login_handler.php
   - capture input, check with db, and if yes store in session
   - then redirect to index.php
   - don't forget to include the login handler in the register.php
5. set login error into error_array and display in login form during login error
6. set login email to session to persist the value during login error
7. reopen closed account during login if the account is closed

SECTION 4
1. create register_style.css, and link it in register.php head
2. add background picture to register.php
   - style it to cover the whole page
3. add div around forms in register.php and style it
4. create login_header div for the header and style it
5. download bellota font, save in font folder, create font-face in css and then use it in login, login header and login header h1
6. add text shadow to login header h1
7. style the login/register form
8. create wrapper for each login & registration form, then and jquery cdn, then create js file for registration page
9. add jquery code to toggle login and registration form
10. fix bug when click register button with error, register form is hidden

SECTION 5
1. create header page in includes, put the upper body of html in the page and include header in index page
2. in header get logged in user from session, but if none, redirect to register page
3. add bootstrap into the header page
4. create the top navbar and style it
5. style the top navbar logo
6. add fontawesome into the header page
7. set the icons on the topbar nav
8. add logged in username name in the topbar nav

SECTION 6
1. create div to display profile image
2. style the above 
3. add user details to above panel and style it
4. create the main column and add form for comment and then style it
5. style the add comment button
6. setup htaccess page, then setup profile page, then link name, profile page and topbar user name to profile page
7. setup posts, post_comments and likes tables in db
8. create User.php class in class folder in includes folder
9. create Post.php class in class folder in includes folder
   - create function to submit post
10. fix line break issue in the textarea
11. fix date insert issue when refresh page
12. create logout menu and logout page

SECTION 7
1. create load post friends function in Post.php
   - get post data
   - create time interval message
2. create ajax_load_posts.php
3. add ajax call in index.php